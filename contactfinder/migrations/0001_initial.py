# Generated by Django 5.2.4 on 2025-07-10 05:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(help_text='Primary company name as found/confirmed', max_length=255)),
                ('summary', models.TextField(blank=True, help_text='LLM-generated company summary for context and relevance scoring')),
                ('primary_domain', models.CharField(db_index=True, help_text="Main contact domain for email generation (e.g., 'acme.com'). This is the domain we've locked onto for employee email inference.", max_length=255)),
                ('email_patterns', models.JSONField(default=list, help_text="Ranked email patterns for this domain with confidence scores. Structure: [{  'pattern': 'first.last@domain.com',   'confidence': 0.95,   'source': 'verified_emails'  # verified_emails|api_lookup|scraped}] ")),
                ('known_emails', models.JSONField(default=list, help_text="Publicly found emails for pattern validation and confidence scoring. Structure: [{'email': 'john.doe@acme.com', 'source': 'www.acme.com'}] Used to validate and rank email patterns.")),
                ('all_domains', models.JSONField(default=list, help_text="All domains related to this company with confidence scores. Structure: [{  'domain': 'acme.com',   'type': 'primary',  # primary|website|parent|subsidiary|other  'confidence': 0.95, }] ")),
                ('search_aliases', models.JSONField(default=list, help_text="Query variations that lead to this company for cache hits. Structure: ['Acme Corp', 'ACME', 'Acme Corporation', 'acme inc'] Dynamically built: when someone searches 'ACME Corp' and we find 'Acme Corporation', we add 'ACME Corp' to aliases to avoid duplicate work.")),
                ('cache_expires_at', models.DateTimeField(blank=True, help_text='When this company data becomes stale and needs refresh (default: 90 days). Null means never expires (manually managed).', null=True)),
                ('last_validated_at', models.DateTimeField(blank=True, help_text="When we last verified/updated this company's domain and pattern data. Used for cache invalidation and data freshness tracking.", null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('full_name', models.CharField(help_text='Complete name as found from source. Primary identifier for this person.', max_length=255)),
                ('name_variations', models.JSONField(default=dict, help_text="Name components and variations for email generation. Structure: {  'first_name': 'Timothy',   'last_name': 'Johnson',   'nickname': 'Tim',   'initials': 'TJ',   'cultural_variants': ['T. Johnson', 'Tim J.'], } ")),
                ('additional_info', models.JSONField(default=dict, help_text="Flexible storage for any additional employee information. Structure: {  'title': 'Manager',   'department': 'Administration',   'linkedin_url': 'https://...',   'phone': '+1-555-...',   'location': 'New York, NY',   'employee_id': 'EMP001'} ")),
                ('primary_email', models.EmailField(blank=True, help_text='Best-confidence verified email. Auto-selected from candidate_emails based on highest (confidence * relevance_score). May still be probabilistic.', max_length=254)),
                ('candidate_emails', models.JSONField(default=list, help_text="All possible emails with detailed verification status. Structure: [{  'email': 'tim.johnson@acme.com',   'confidence': 0.92,   'smtp_status': 'deliverable',  # deliverable|undeliverable|catch_all|unknown  'smtp_code': 250,   'verification_method': 'smtp_check',  # smtp_check|api_verify|send_test|other  'source': 'pattern_generated',  # pattern_generated|scraped|api_lookup|other  'last_checked': '2025-01-15T10:30:00Z',   'relevance_score': 0.95,  # LLM confidence this email belongs to this person  'final_score': 0.874  # confidence * relevance_score}] ")),
                ('cache_expires_at', models.DateTimeField(blank=True, help_text='When this employee data becomes stale (default: 30 days). Triggers re-verification of email candidates.', null=True)),
                ('last_validated_at', models.DateTimeField(blank=True, help_text="When we last verified/updated this employee's email candidates. Used for cache invalidation and re-verification scheduling.", null=True)),
                ('company', models.ForeignKey(help_text="Company this employee belongs to. Email generation uses company's primary_domain.", on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='contactfinder.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['primary_domain'], name='contactfind_primary_8378f9_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='contactfind_name_41e884_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['cache_expires_at'], name='contactfind_cache_e_48c9bd_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'full_name'], name='contactfind_company_228c65_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['primary_email'], name='contactfind_primary_53cba8_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['cache_expires_at'], name='contactfind_cache_e_35dbbe_idx'),
        ),
    ]
