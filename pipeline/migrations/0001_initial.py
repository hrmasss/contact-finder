# Generated by Django 5.2.4 on 2025-07-14 05:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscoveredCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(help_text='Primary company name as found/confirmed', max_length=255)),
                ('email_domains', models.JSONField(default=list, help_text="Email domains for this company with confidence scores. Structure: [{  'domain': 'acme.com',   'confidence': 0.95,   'source': 'gemini_search'  # gemini_search|api_lookup|scraped}]")),
                ('email_patterns', models.JSONField(default=list, help_text="Ranked email patterns for this company with confidence scores. Structure: [{  'domain': 'acme.com',   'pattern': 'first.last',   'confidence': 0.95,   'source': 'verified_emails',  # verified_emails|api_lookup|scraped|inferred  'verified_count': 5}]")),
                ('known_emails', models.JSONField(default=list, help_text="Publicly found emails for pattern validation and confidence scoring. Structure: [{  'email': 'john.doe@acme.com',   'source': 'company_website',  # company_website|linkedin|others  'confidence': 0.9 }] Used to validate and rank email patterns.")),
                ('search_aliases', models.JSONField(default=list, help_text="Query variations that lead to this company for cache hits. Structure: ['Acme Corp', 'ACME', 'Acme Corporation', 'acme inc'] Dynamically built: when someone searches 'ACME Corp' and we find 'Acme Corporation', we add 'ACME Corp' to aliases to avoid duplicate work.")),
                ('metadata', models.JSONField(default=dict, help_text="Additional company information from discovery. Structure: {  'website': 'https://acme.com',   'linkedin': 'https://www.linkedin.com/company/acme',   'summary': 'LLM-generated company summary',   'location': 'San Francisco, CA',   'industry': 'Technology',   'employee_count': '1000-5000',   'founded': '2010'}")),
                ('search_level', models.CharField(choices=[('basic', 'Basic'), ('advanced', 'Advanced')], default='basic', help_text='Search level used for discovery (basic=Gemini, advanced=APIs)', max_length=20)),
                ('additional_info', models.JSONField(default=dict, help_text="Context provided during discovery for disambiguation. Structure: {'location': 'San Francisco', 'industry': 'tech', 'size': 'startup'}")),
                ('cache_expires_at', models.DateTimeField(blank=True, help_text='When this company data becomes stale and needs refresh (default: 90 days). Null means never expires (manually managed).', null=True)),
                ('last_validated_at', models.DateTimeField(blank=True, help_text="When we last verified/updated this company's domain and pattern data. Used for cache invalidation and data freshness tracking.", null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['-last_validated_at', 'name'],
                'indexes': [models.Index(fields=['name'], name='pipeline_di_name_3c6fa5_idx'), models.Index(fields=['cache_expires_at'], name='pipeline_di_cache_e_e1c971_idx')],
            },
        ),
    ]
